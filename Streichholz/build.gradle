/*
 * This file was initially generated by the Gradle 'init' task and then modified by Andre Lindemann.
 *
 * This generated file contains a sample C++ project to get you started.
 * For more details take a look at the Building C++ applications and libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.1/userguide/building_cpp_projects.html
 */

plugins {
    // Apply the cpp-application plugin to add support for building C++ executables
    id 'cpp-application'
}

model {
    toolChains {
        visualCpp(VisualCpp) {
            // Specify the installDir if Visual Studio cannot be located
            // installDir "C:/Apps/Microsoft Visual Studio 10.0"
        }
    }
}

// Set the target operating system and architecture for this application
application {
    targetMachines.add(machines.windows.x86_64)
    source.from file('src')
}

task publish(type: Zip,dependsOn:build) {
    def getGitHash = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    files('./build/exe').each {
        from it.getPath()
    }
    
    destinationDirectory = file('build/')
    archiveBaseName = "release_" + getGitHash()
}